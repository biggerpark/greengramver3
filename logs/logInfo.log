[2024-12-10 09:46:45 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11060 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 09:46:45 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:46:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 09:46:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 09:46:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:46:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:46:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:46:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:46:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:46:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 910 ms
[2024-12-10 09:46:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:46:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:46:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:46:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:46:47 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.93 seconds (process running for 2.386)
[2024-12-10 09:47:08 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 09:47:08 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 09:47:08 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 09:47:08 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 09:47:08 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 09:47:08 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 09:47:08 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@75b82c59
[2024-12-10 09:47:08 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 09:47:08 WARN http-nio-8080-exec-7] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DES
        LIMIT 0,20' at line 17
[2024-12-10 09:47:08 ERRORhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DES
        LIMIT 0,20
 {FAILED after 3 msec}
java.sql.SQLSyntaxErrorException: (conn=4) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DES
        LIMIT 0,20' at line 17
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:89)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList(FeedController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 09:47:08 ERRORhttp-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=4) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DES
        LIMIT 0,20' at line 17
### The error may exist in file [D:\pjh\GreenGramVer3\build\resources\main\mappers\FeedMaper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT    A.feed_id as feedId                 , A.contents as contents                 , A.location as location                 , A.created_at as createdAt                 , B.user_id as writerUserId                 , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm                 , B.pic as writerPic                 , if(c.feed_id IS NULL,0,1) AS isLike         FROM feed A         LEFT JOIN user B         ON A.writer_user_id=B.user_id         Left JOIN feed_like c         ON c.feed_id=a.feed_id         AND c.user_id=?                   ORDER BY A.feed_id DES         LIMIT ?,?
### Cause: java.sql.SQLSyntaxErrorException: (conn=4) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DES
        LIMIT 0,20' at line 17
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=4) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DES
        LIMIT 0,20' at line 17
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:89)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList(FeedController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 09:47:13 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 09:47:13 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 09:47:13 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DES
        LIMIT 0,20' at line 17
[2024-12-10 09:47:13 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DES
        LIMIT 0,20
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=4) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DES
        LIMIT 0,20' at line 17
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:89)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList(FeedController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 09:47:13 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=4) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DES
        LIMIT 0,20' at line 17
### The error may exist in file [D:\pjh\GreenGramVer3\build\resources\main\mappers\FeedMaper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT    A.feed_id as feedId                 , A.contents as contents                 , A.location as location                 , A.created_at as createdAt                 , B.user_id as writerUserId                 , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm                 , B.pic as writerPic                 , if(c.feed_id IS NULL,0,1) AS isLike         FROM feed A         LEFT JOIN user B         ON A.writer_user_id=B.user_id         Left JOIN feed_like c         ON c.feed_id=a.feed_id         AND c.user_id=?                   ORDER BY A.feed_id DES         LIMIT ?,?
### Cause: java.sql.SQLSyntaxErrorException: (conn=4) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DES
        LIMIT 0,20' at line 17
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=4) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DES
        LIMIT 0,20' at line 17
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:89)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList(FeedController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 09:48:28 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 09:48:28 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 09:48:30 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 1192 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 09:48:30 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:48:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 09:48:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 09:48:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:48:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:48:31 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:48:31 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:48:31 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:48:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 789 ms
[2024-12-10 09:48:31 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:48:31 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:48:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:48:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:48:31 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.654 seconds (process running for 1.997)
[2024-12-10 09:48:34 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 09:48:34 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 09:48:34 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5cd90dfb
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 7 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 1 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 1 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 1 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 1 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 09:48:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:48:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:48:38 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 09:48:38 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=21)
[2024-12-10 09:48:38 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=21)
[2024-12-10 09:48:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 09:48:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 09:48:38 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 21
 {executed in 8 msec}
[2024-12-10 09:48:38 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|21      |373737f2-788a-4192-bdc8-b5afae413390.jpg |2024-12-09 16:01:05 |와우       |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:49:36 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 09:49:36 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 09:49:38 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 5692 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 09:49:38 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:49:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 09:49:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 09:49:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:49:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:49:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:49:39 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:49:39 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:49:39 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 754 ms
[2024-12-10 09:49:39 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:49:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:49:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:49:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:49:39 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.596 seconds (process running for 1.953)
[2024-12-10 09:49:54 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 09:49:54 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 09:49:54 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5cd90dfb
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 1 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 1 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 1 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 09:49:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:49:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:49:58 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 09:49:58 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=21)
[2024-12-10 09:49:58 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=21)
[2024-12-10 09:49:58 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 09:49:58 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 09:49:58 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 21
 {executed in 0 msec}
[2024-12-10 09:49:58 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|21      |373737f2-788a-4192-bdc8-b5afae413390.jpg |2024-12-09 16:01:05 |와우       |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 1 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 1 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 1 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 1 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 09:50:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:01 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=17)
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=17)
[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 17
 {executed in 1 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|17      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |2024-12-06 12:56:27 |asd      |0        |0         |27        |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=17

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 1 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 1 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 09:50:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:06 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 2, null, 21
[2024-12-10 09:50:06 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=17)
[2024-12-10 09:50:06 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=21, profileUserId=21)
[2024-12-10 09:50:06 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 17
 {executed in 0 msec}
[2024-12-10 09:50:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 20,20
 {executed in 1 msec}
[2024-12-10 09:50:06 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|17      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |2024-12-06 12:56:27 |asd      |0        |0         |27        |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:50:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 09:50:08 INFO http-nio-8080-exec-5] [com.green.greengram.user.UserController] patchProfilePic:UserPicPatchReq(signedUserId=21, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@15fb42c7, picName=null)
[2024-12-10 09:50:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
        SET pic='e12dcc49-fe54-478a-a3b8-987784019eb3.jpg'
        WHERE user_id=21
 {executed in 3 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 09:50:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=17)
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=17)
[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 17
 {executed in 0 msec}
[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=17

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|17      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |2024-12-06 12:56:27 |asd      |0        |0         |27        |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 1 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 1 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 6 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 1 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 09:50:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 09:50:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:50:28 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 2, null, 21
[2024-12-10 09:50:28 INFO http-nio-8080-exec-9] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=17)
[2024-12-10 09:50:28 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=21, profileUserId=21)
[2024-12-10 09:50:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 17
 {executed in 1 msec}
[2024-12-10 09:50:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|17      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |2024-12-06 12:56:27 |asd      |0        |0         |27        |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:50:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 20,20
 {executed in 0 msec}
[2024-12-10 09:50:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 1 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 1 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 1 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 10:14:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:14:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:10 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 10:38:10 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 10:38:12 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 7180 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 10:38:12 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 10:38:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 10:38:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 10:38:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 10:38:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:38:13 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 10:38:13 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 10:38:13 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 10:38:13 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 805 ms
[2024-12-10 10:38:13 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 10:38:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 10:38:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:38:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 10:38:13 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.688 seconds (process running for 2.089)
[2024-12-10 10:38:23 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 10:38:23 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 10:38:23 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@328bdf0
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 1 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 1 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 1 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 10:38:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=17)
[2024-12-10 10:38:26 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=17)
[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=17

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 17
 {executed in 1 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|17      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |2024-12-06 12:56:27 |asd      |0        |0         |27        |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 1 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 1 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 1 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 1 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 10:38:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:26 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:29 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=21)
[2024-12-10 10:38:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 21
 {executed in 0 msec}
[2024-12-10 10:38:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|21      |e12dcc49-fe54-478a-a3b8-987784019eb3.jpg |2024-12-09 16:01:05 |와우       |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:38:29 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:38:29 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=21)
[2024-12-10 10:38:29 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 10:38:29 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 10:38:33 INFO http-nio-8080-exec-2] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=17)
[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 17
 {executed in 1 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|17      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |2024-12-06 12:56:27 |asd      |0        |0         |27        |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=17)
[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=17

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 1 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 1 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 10:38:33 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:33 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 10:38:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:38:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:05 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=21)
[2024-12-10 10:43:05 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:43:05 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=21)
[2024-12-10 10:43:05 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 21
 {executed in 1 msec}
[2024-12-10 10:43:05 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|21      |e12dcc49-fe54-478a-a3b8-987784019eb3.jpg |2024-12-09 16:01:05 |와우       |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:43:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 10:43:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 10:43:07 INFO http-nio-8080-exec-9] [com.green.greengram.user.UserController] patchProfilePic:UserPicPatchReq(signedUserId=21, pic=null, picName=null)
[2024-12-10 10:43:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
        SET pic=NULL
        WHERE user_id=21
 {executed in 6 msec}
[2024-12-10 10:43:10 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] patchProfilePic:UserPicPatchReq(signedUserId=21, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@76bdf5a0, picName=null)
[2024-12-10 10:43:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
        SET pic='a74fd821-7aef-4a04-89ea-3ce01e2abb9c.jpg'
        WHERE user_id=21
 {executed in 2 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 1 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 10:43:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:43:26 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=17)
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=17)
[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 17
 {executed in 1 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|17      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |2024-12-06 12:56:27 |asd      |0        |0         |27        |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=17

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 1 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 1 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 1 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 1 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 10:43:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 10:43:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:43:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:43:34 INFO http-nio-8080-exec-5] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=21)
[2024-12-10 10:43:34 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:43:34 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=21)
[2024-12-10 10:43:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 21
 {executed in 1 msec}
[2024-12-10 10:43:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:43:34 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 10:43:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|21      |a74fd821-7aef-4a04-89ea-3ce01e2abb9c.jpg |2024-12-09 16:01:05 |와우       |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:43:50 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET  writer_user_id=21
            ,contents='d'
            ,location='d'
 {executed in 1 msec}
[2024-12-10 10:43:50 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET  writer_user_id=21
            ,contents='d'
            ,location='d'
 {executed in 0 msec}
[2024-12-10 10:43:50 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|72        |
|----------|

[2024-12-10 10:43:50 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id,pic)
        VALUES
         (   
            72,'b5d2594c-dab9-43b0-a2ff-013698027ac8.jpg'
         )
 {executed in 0 msec}
[2024-12-10 10:45:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 10:45:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 10:45:43 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 13200 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 10:45:43 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 10:45:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 10:45:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 10:45:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 10:45:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:45:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 10:45:44 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 10:45:44 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 10:45:44 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 795 ms
[2024-12-10 10:45:44 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 10:45:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 10:45:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:45:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 10:45:44 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.673 seconds (process running for 2.074)
[2024-12-10 10:45:51 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 10:45:51 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 10:45:51 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@328bdf0
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|72      |d        |d        |2024-12-10 10:43:50 |21      |와우       |a74fd821-7aef-4a04-89ea-3ce01e2abb9c.jpg |0      |
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=72
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b5d2594c-dab9-43b0-a2ff-013698027ac8.jpg |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=72
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 1 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:45:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:45:56 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:45:56 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=21)
[2024-12-10 10:45:56 INFO http-nio-8080-exec-2] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=21)
[2024-12-10 10:45:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:45:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|72      |d        |d        |2024-12-10 10:43:50 |21      |와우       |a74fd821-7aef-4a04-89ea-3ce01e2abb9c.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:45:56 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 21
 {executed in 1 msec}
[2024-12-10 10:45:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=72
 {executed in 0 msec}
[2024-12-10 10:45:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b5d2594c-dab9-43b0-a2ff-013698027ac8.jpg |
|-----------------------------------------|

[2024-12-10 10:45:56 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|21      |a74fd821-7aef-4a04-89ea-3ce01e2abb9c.jpg |2024-12-09 16:01:05 |와우       |0        |0         |1         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:45:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=72
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:45:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|72      |d        |d        |2024-12-10 10:43:50 |21      |와우       |a74fd821-7aef-4a04-89ea-3ce01e2abb9c.jpg |0      |
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=72
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b5d2594c-dab9-43b0-a2ff-013698027ac8.jpg |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=72
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 1 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 1 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:46:01 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:01 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 INFO http-nio-8080-exec-9] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=17)
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=17)
[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 17
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|17      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |2024-12-06 12:56:27 |asd      |0        |0         |27        |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=17

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=17)
[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=17

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|50      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=50
 {executed in 1 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|087d9bf4-b50b-4adb-b15f-a58cfb04ddda.gif |
|-----------------------------------------|

[2024-12-10 10:46:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=50
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:46:07 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] getUserInfo:UserInfoGetReq(signedUserId=21, profileUserId=21)
[2024-12-10 10:46:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 21, 1, 0))
        + MAX(IF(F2.to_user_id = 21, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 21
 {executed in 0 msec}
[2024-12-10 10:46:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|21      |a74fd821-7aef-4a04-89ea-3ce01e2abb9c.jpg |2024-12-09 16:01:05 |와우       |0        |0         |1         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:46:07 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:46:07 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=21)
[2024-12-10 10:46:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

            WHERE B.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:46:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|72      |d        |d        |2024-12-10 10:43:50 |21      |와우       |a74fd821-7aef-4a04-89ea-3ce01e2abb9c.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:46:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=72
 {executed in 1 msec}
[2024-12-10 10:46:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b5d2594c-dab9-43b0-a2ff-013698027ac8.jpg |
|-----------------------------------------|

[2024-12-10 10:46:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=72
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:46:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|72      |d        |d        |2024-12-10 10:43:50 |21      |와우       |a74fd821-7aef-4a04-89ea-3ce01e2abb9c.jpg |0      |
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=72
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b5d2594c-dab9-43b0-a2ff-013698027ac8.jpg |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=72
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 16 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 10:52:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 10:52:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 11:12:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 11:12:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:04:24 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 6600 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 17:04:24 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:04:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:04:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:04:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:04:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:04:25 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:04:25 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:04:25 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:04:25 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 779 ms
[2024-12-10 17:04:25 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:04:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:04:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:04:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:04:26 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.641 seconds (process running for 1.981)
[2024-12-10 17:04:33 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:04:33 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:04:33 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, null, 21
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=21, profileUserId=null)
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@df6ab2
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=21

        ORDER BY A.feed_id DESC
        LIMIT 0,20
 {executed in 0 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|72      |d        |d        |2024-12-10 10:43:50 |21      |와우       |a74fd821-7aef-4a04-89ea-3ce01e2abb9c.jpg |0      |
|69      |         |         |2024-12-09 16:37:51 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|68      |         |         |2024-12-09 16:37:46 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|67      |         |         |2024-12-09 16:37:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|66      |         |         |2024-12-09 16:28:44 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|65      |         |         |2024-12-09 16:28:43 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|64      |         |         |2024-12-09 16:28:42 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|63      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|62      |         |         |2024-12-09 16:28:41 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|61      |         |         |2024-12-09 16:28:39 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|60      |         |         |2024-12-09 16:28:38 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|59      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|58      |         |         |2024-12-09 16:28:36 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|57      |         |         |2024-12-09 16:28:35 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|56      |         |         |2024-12-09 16:28:34 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|55      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|54      |         |         |2024-12-09 16:28:33 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|53      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|52      |         |         |2024-12-09 16:28:30 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|51      |         |         |2024-12-09 16:28:27 |17      |asd      |954180f1-fe23-4957-97f1-55e5861da0f6.gif |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=72
 {executed in 0 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b5d2594c-dab9-43b0-a2ff-013698027ac8.jpg |
|-----------------------------------------|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=72
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=69
 {executed in 1 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ff269ca4-b98a-4133-abaf-60329a9ab1b2.gif |
|-----------------------------------------|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=69
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=68
 {executed in 0 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b15220e9-7acb-41b7-aaf7-cb37e970d837.gif |
|-----------------------------------------|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=68
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=67
 {executed in 0 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b45f656a-4376-443b-9805-d882dac567e6.gif |
|-----------------------------------------|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=67
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=66
 {executed in 0 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|01d760a8-0c81-4672-a58b-ffd3963353b4.gif |
|-----------------------------------------|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=66
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=65
 {executed in 0 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1bd5b533-cb03-4d2f-93c0-e75e8a585ce2.gif |
|-----------------------------------------|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=65
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=64
 {executed in 0 msec}
[2024-12-10 17:04:33 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2b0bbbc7-a8b5-44f7-948d-59e06bc47d75.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=64
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=63
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5feed887-a97c-451c-b662-1f705594e295.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=63
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=62
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|972bb604-fa6e-4c80-8b64-5fcbe51e73d1.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=62
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=61
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4fe0e040-d697-4bde-a2f6-92134eda9c85.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=61
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=60
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5e5a382d-c8bc-49e9-bb6f-c5412742d6cf.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=60
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=59
 {executed in 1 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a4984433-4651-4596-a9d0-ee8b5f80d461.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=59
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=58
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|57728713-86ee-477d-857d-9471b4bcc038.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=58
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=57
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|612bfae8-7811-436f-b45c-81957206b6d9.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=57
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=56
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7f4e3c0c-aca1-4209-a7e9-adf79772b4cb.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=56
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=55
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e76626b-807b-4e26-9727-a5c826280021.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=55
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 1 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=54
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|858e8709-4add-491e-b64f-fd9cc8f19605.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=54
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=53
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|794e6983-1a3c-4acb-8b15-d7dd1c035e72.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=53
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=52
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c71b939f-48f9-43e5-b2d7-23acd50fbbd8.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=52
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id=51
 {executed in 1 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2098d26f-95ea-4f55-95ed-f24135aa4020.gif |
|-----------------------------------------|

[2024-12-10 17:04:34 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   a.feed_comment_id as feedCommentId
                ,a.comment
                ,b.user_id as writerUserId
                ,IF(b.nick_name is null,b.uid,b.nick_name) as writerNm
                ,b.pic as writerPic
        FROM feed_comment a
        INNER JOIN user b
        on a.user_id=b.user_id
        where a.feed_id=51
        ORDER BY A.FEED_comment_ID DESC
        LIMIT 0,4
 {executed in 0 msec}
[2024-12-10 17:04:34 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:04:36 INFO http-nio-8080-exec-6] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 198 ms
[2024-12-10 17:05:07 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, 10, 2
[2024-12-10 17:05:07 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=10, startIdx=0), signedUserId=2, profileUserId=2)
[2024-12-10 17:05:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=2

            WHERE B.user_id=2

        ORDER BY A.feed_id DESC
        LIMIT 0,10
 {executed in 0 msec}
[2024-12-10 17:05:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 17:05:07 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedService] feedIds:[]
[2024-12-10 17:05:07 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
[2024-12-10 17:05:07 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   feed_id as feedId
                ,pic
        FROM feed_pic
        WHERE feed_id in(

        )
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=64) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:153)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:05:07 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=64) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
### The error may exist in file [D:\pjh\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT   feed_id as feedId                 ,pic         FROM feed_pic         WHERE feed_id in(                   )
### Cause: java.sql.SQLSyntaxErrorException: (conn=64) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=64) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:153)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:05:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:05:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:06:01 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11320 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 17:06:01 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:06:01 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:06:01 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:06:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:06:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:06:02 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:06:02 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:06:02 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:06:02 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 828 ms
[2024-12-10 17:06:02 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:06:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:06:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:06:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:06:02 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.791 seconds (process running for 2.123)
[2024-12-10 17:06:04 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:06:04 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:06:04 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 17:06:04 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, 10, 2
[2024-12-10 17:06:04 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=10, startIdx=0), signedUserId=2, profileUserId=2)
[2024-12-10 17:06:04 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:06:05 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@62ce573c
[2024-12-10 17:06:05 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:06:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=2

            WHERE B.user_id=2

        ORDER BY A.feed_id DESC
        LIMIT 0,10
 {executed in 1 msec}
[2024-12-10 17:06:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 17:06:05 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] feedIds:[]
[2024-12-10 17:06:05 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
[2024-12-10 17:06:05 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   feed_id as feedId
                ,pic
        FROM feed_pic
        WHERE feed_id in(

        )
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=74) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:153)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:06:05 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=74) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
### The error may exist in file [D:\pjh\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT   feed_id as feedId                 ,pic         FROM feed_pic         WHERE feed_id in(                   )
### Cause: java.sql.SQLSyntaxErrorException: (conn=74) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=74) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:153)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:06:12 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, 10, 2
[2024-12-10 17:06:12 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=10, startIdx=0), signedUserId=2, profileUserId=2)
[2024-12-10 17:06:12 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=2

            WHERE B.user_id=2

        ORDER BY A.feed_id DESC
        LIMIT 0,10
 {executed in 0 msec}
[2024-12-10 17:06:12 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 17:06:12 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedService] feedIds:[]
[2024-12-10 17:06:12 WARN http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
[2024-12-10 17:06:12 ERRORhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   feed_id as feedId
                ,pic
        FROM feed_pic
        WHERE feed_id in(

        )
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=74) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:153)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:06:12 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=74) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
### The error may exist in file [D:\pjh\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT   feed_id as feedId                 ,pic         FROM feed_pic         WHERE feed_id in(                   )
### Cause: java.sql.SQLSyntaxErrorException: (conn=74) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=74) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:153)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:08:15 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:08:15 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:08:17 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 5748 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 17:08:17 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:08:17 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:08:17 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:08:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:08:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:08:18 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:08:18 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:08:18 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:08:18 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 776 ms
[2024-12-10 17:08:18 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:08:18 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:08:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:08:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:08:19 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.641 seconds (process running for 1.987)
[2024-12-10 17:08:21 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:08:21 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:08:21 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 17:08:21 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, 10, 2
[2024-12-10 17:08:21 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=10, startIdx=0), signedUserId=2, profileUserId=2)
[2024-12-10 17:08:21 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:08:21 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7d7d6ae9
[2024-12-10 17:08:21 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:08:21 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=2

            WHERE B.user_id=2

        ORDER BY A.feed_id DESC
        LIMIT 0,10
 {executed in 1 msec}
[2024-12-10 17:08:21 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 17:08:21 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] feedIds:[]
[2024-12-10 17:08:21 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
[2024-12-10 17:08:21 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   feed_id as feedId
                ,pic
        FROM feed_pic
        WHERE feed_id in(

        )
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=84) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:153)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:08:21 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=84) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
### The error may exist in file [D:\pjh\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT   feed_id as feedId                 ,pic         FROM feed_pic         WHERE feed_id in(                   )
### Cause: java.sql.SQLSyntaxErrorException: (conn=84) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=84) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:153)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:14:18 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-10 17:14:18 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:14:18 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:14:18 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:14:18 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 5748 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 17:14:18 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:14:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:14:18 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 240 ms
[2024-12-10 17:14:19 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:14:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:14:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:14:19 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.435 seconds (process running for 362.113)
[2024-12-10 17:14:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 17:14:20 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 1820 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 17:14:20 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:14:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:14:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:14:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:14:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:14:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:14:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:14:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:14:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 790 ms
[2024-12-10 17:14:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:14:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:14:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:14:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:14:22 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.699 seconds (process running for 2.033)
[2024-12-10 17:14:23 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:14:23 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:14:23 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 17:14:23 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, 10, 2
[2024-12-10 17:14:23 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=10, startIdx=0), signedUserId=2, profileUserId=2)
[2024-12-10 17:14:23 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:14:23 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@31744e91
[2024-12-10 17:14:23 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:14:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=2

            WHERE B.user_id=2

        ORDER BY A.feed_id DESC
        LIMIT 0,10
 {executed in 1 msec}
[2024-12-10 17:14:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 17:14:23 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] FeedGetResList : [] 
[2024-12-10 17:14:23 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] feedIds:[]
[2024-12-10 17:14:23 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
[2024-12-10 17:14:23 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   feed_id as feedId
                ,pic
        FROM feed_pic
        WHERE feed_id in(

        )
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=94) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:153)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:14:23 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=94) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
### The error may exist in file [D:\pjh\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT   feed_id as feedId                 ,pic         FROM feed_pic         WHERE feed_id in(                   )
### Cause: java.sql.SQLSyntaxErrorException: (conn=94) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=94) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:153)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:15:49 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:15:49 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:15:51 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 9784 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 17:15:51 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:15:51 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:15:51 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:15:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:15:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:15:52 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:15:52 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:15:52 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:15:52 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 818 ms
[2024-12-10 17:15:52 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:15:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:15:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:15:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:15:52 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.703 seconds (process running for 2.057)
[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, 10, 2
[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=10, startIdx=0), signedUserId=2, profileUserId=2)
[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7d7d6ae9
[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] FeedGetReq : FeedGetReq(super=Paging(page=1, size=10, startIdx=0), signedUserId=2, profileUserId=2)
[2024-12-10 17:15:54 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=2

            WHERE B.user_id=2

        ORDER BY A.feed_id DESC
        LIMIT 0,10
 {executed in 1 msec}
[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] FeedGetResList : [] 
[2024-12-10 17:15:54 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] feedIds:[]
[2024-12-10 17:15:54 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
[2024-12-10 17:15:54 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   feed_id as feedId
                ,pic
        FROM feed_pic
        WHERE feed_id in(

        )
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=104) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:154)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:15:54 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=104) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
### The error may exist in file [D:\pjh\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT   feed_id as feedId                 ,pic         FROM feed_pic         WHERE feed_id in(                   )
### Cause: java.sql.SQLSyntaxErrorException: (conn=104) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=104) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 6
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:154)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.selFeedList3(FeedController.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:17:20 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, 10, 2
[2024-12-10 17:17:20 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=10, startIdx=0), signedUserId=2, profileUserId=5)
[2024-12-10 17:17:20 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] FeedGetReq : FeedGetReq(super=Paging(page=1, size=10, startIdx=0), signedUserId=2, profileUserId=5)
[2024-12-10 17:17:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=2

            WHERE B.user_id=5

        ORDER BY A.feed_id DESC
        LIMIT 0,10
 {executed in 0 msec}
[2024-12-10 17:17:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic |islike |
|--------|---------|---------|--------------------|--------|---------|----|-------|
|4       |1212     |홍길동      |2024-11-29 10:39:09 |5       |로        |null|0      |
|3       |1212     |홍길동      |2024-11-29 10:37:58 |5       |로        |null|0      |
|--------|---------|---------|--------------------|--------|---------|----|-------|

[2024-12-10 17:17:20 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] FeedGetResList : [FeedGetRes(feedId=4, writerUserId=5, contents=1212, location=홍길동, createdAt=2024-11-29 10:39:09, writerNm=로, writerPic=null, isLike=0, pics=[], comment=null, comments=[]), FeedGetRes(feedId=3, writerUserId=5, contents=1212, location=홍길동, createdAt=2024-11-29 10:37:58, writerNm=로, writerPic=null, isLike=0, pics=[], comment=null, comments=[])] 
[2024-12-10 17:17:20 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] feedIds:[4, 3]
[2024-12-10 17:17:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   feed_id as feedId
                ,pic
        FROM feed_pic
        WHERE feed_id in(

            4
         , 
            3

        )
 {executed in 0 msec}
[2024-12-10 17:17:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|------------------------------------------|
|feed_id |pic                                       |
|--------|------------------------------------------|
|3       |7df7cd71-a37a-48f3-981b-4b183b98b5d7.jpg  |
|4       |bf3d8060-d3b6-49c7-aa70-e1bac478e1bb.jfif |
|4       |d60e858e-a717-47ce-9d78-86afb849dbae.jpg  |
|--------|------------------------------------------|

[2024-12-10 17:17:20 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] FeedPicList:[com.green.greengram.feed.model.FeedPicSel@aabd51c, com.green.greengram.feed.model.FeedPicSel@4f4e08b, com.green.greengram.feed.model.FeedPicSel@6db22149]
[2024-12-10 17:17:20 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] list:[FeedGetRes(feedId=4, writerUserId=5, contents=1212, location=홍길동, createdAt=2024-11-29 10:39:09, writerNm=로, writerPic=null, isLike=0, pics=[bf3d8060-d3b6-49c7-aa70-e1bac478e1bb.jfif, d60e858e-a717-47ce-9d78-86afb849dbae.jpg], comment=null, comments=[]), FeedGetRes(feedId=3, writerUserId=5, contents=1212, location=홍길동, createdAt=2024-11-29 10:37:58, writerNm=로, writerPic=null, isLike=0, pics=[7df7cd71-a37a-48f3-981b-4b183b98b5d7.jpg], comment=null, comments=[])]
[2024-12-10 17:17:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId AS feedId, T.feedCommentId as feedCommentId, T.comment as comment
    FROM (
    SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
    , A.feed_id AS feedId
    , A.feed_comment_id AS feedCommentId
    , A.comment
    , B.user_id AS writerUserId
    , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
    , B.pic AS writerPic
    FROM feed_comment A
    INNER JOIN user B
    ON A.user_id = B.user_id
    WHERE A.feed_id IN (

                4
         , 
                3

    )
        )T
    WHERE T.num   <=   4
 {executed in 0 msec}
[2024-12-10 17:17:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-------|--------------|--------|
|feedid |feedcommentid |comment |
|-------|--------------|--------|
|-------|--------------|--------|

[2024-12-10 17:42:26 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-10 17:42:26 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:42:26 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:42:26 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:42:26 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 9784 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 17:42:26 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:42:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:42:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:42:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:42:26 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:42:26 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:42:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 199 ms
[2024-12-10 17:42:26 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:42:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:42:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:42:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:42:26 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.409 seconds (process running for 1595.929)
[2024-12-10 17:42:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 17:55:45 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11052 (D:\pjh\GreenGramVer3\build\classes\java\main started by Administrator in D:\pjh\GreenGramVer3)
[2024-12-10 17:55:45 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:55:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:55:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:55:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:55:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:55:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:55:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:55:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:55:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 833 ms
[2024-12-10 17:55:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:55:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:55:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:55:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:55:47 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.712 seconds (process running for 2.059)
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] FeedGetReq 1, 10, 2
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController>getFeedList>p:FeedGetReq(super=Paging(page=1, size=10, startIdx=0), signedUserId=2, profileUserId=12)
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@31744e91
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] FeedGetReq : FeedGetReq(super=Paging(page=1, size=10, startIdx=0), signedUserId=2, profileUserId=12)
[2024-12-10 17:56:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.feed_id as feedId
                , A.contents as contents
                , A.location as location
                , A.created_at as createdAt
                , B.user_id as writerUserId
                , IF(B.nick_name IS NULL, b.uid,b.nick_name) AS writerNm
                , B.pic as writerPic
                , if(c.feed_id IS NULL,0,1) AS isLike
        FROM feed A
        LEFT JOIN user B
        ON A.writer_user_id=B.user_id
        Left JOIN feed_like c
        ON c.feed_id=a.feed_id
        AND c.user_id=2

            WHERE B.user_id=12

        ORDER BY A.feed_id DESC
        LIMIT 0,10
 {executed in 1 msec}
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|29      |f        |f        |2024-11-29 16:28:31 |12      |모        |05c120c8-6e81-4958-903c-c70d838fde48.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] FeedGetResList : [FeedGetRes(feedId=29, writerUserId=12, contents=f, location=f, createdAt=2024-11-29 16:28:31, writerNm=모, writerPic=05c120c8-6e81-4958-903c-c70d838fde48.jpg, isLike=0, pics=[], comment=null)] 
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] feedIds:[29]
[2024-12-10 17:56:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT   feed_id as feedId
                ,pic
        FROM feed_pic
        WHERE feed_id in(

            29

        )
 {executed in 1 msec}
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|29      |3eeb55c3-388c-47f4-b4aa-d6846f015527.jpg |
|--------|-----------------------------------------|

[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] FeedPicList:[com.green.greengram.feed.model.FeedPicSel@dae6762]
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] list:[FeedGetRes(feedId=29, writerUserId=12, contents=f, location=f, createdAt=2024-11-29 16:28:31, writerNm=모, writerPic=05c120c8-6e81-4958-903c-c70d838fde48.jpg, isLike=0, pics=[3eeb55c3-388c-47f4-b4aa-d6846f015527.jpg], comment=null)]
[2024-12-10 17:56:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId AS feedId, T.feedCommentId as feedCommentId, T.comment as comment
    FROM (
    SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
    , A.feed_id AS feedId
    , A.feed_comment_id AS feedCommentId
    , A.comment
    , B.user_id AS writerUserId
    , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
    , B.pic AS writerPic
    FROM feed_comment A
    INNER JOIN user B
    ON A.user_id = B.user_id
    WHERE A.feed_id IN (

                29

    )
        )T
    WHERE T.num   <=   4
 {executed in 0 msec}
[2024-12-10 17:56:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-------|--------------|------------------------------------------------------|
|feedid |feedcommentid |comment                                               |
|-------|--------------|------------------------------------------------------|
|29     |72            |우연히 피드 보고 작업을 즐기시고 잘 하시는 분 같아서... 참다가 인사 드리는 거예요. ^ ^ |
|29     |71            |멋진 직업                                                 |
|29     |41            |7                                                     |
|29     |40            |6                                                     |
|-------|--------------|------------------------------------------------------|

[2024-12-10 18:02:43 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 18:02:43 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
